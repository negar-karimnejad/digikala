// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  avatar    String?
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  role      String     @default("USER")
  comments  Comment[]
  questions Question[]
  orders    Order[]
}

model Product {
  id                  Int        @id @default(autoincrement())
  title               String
  en_title            String
  rating              Float?
  voter               Int
  comments            Comment[]
  questions           Question[]
  colors              Color[]
  images              Image[]
  thumbnail           String
  features            Feature[]
  seller              Seller     @relation(fields: [sellerId], references: [id])
  sellerId            Int
  price               Float
  discount            Float?
  discount_price      Float?
  description         String
  recommended_percent Float?
  guarantee           String?
  likes               Int
  categories          Category[] @relation("ProductCategories")
  orders              Order[]    @relation("ProductOrders")
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id        Int     @id @default(autoincrement())
  name      String
  hexCode   String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Feature {
  id        Int     @id @default(autoincrement())
  name      String
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Seller {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  products Product[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] @relation("ProductCategories")
}

model Order {
  id          Int       @id @default(autoincrement())
  orderDate   DateTime  @default(now())
  totalAmount Float
  status      String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  products    Product[] @relation("ProductOrders")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
